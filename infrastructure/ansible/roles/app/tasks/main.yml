---
- name: Install rsync
  apt:
    name: rsync
    state: present
    update_cache: yes
  become: yes

- name: Install PM2 globally
  community.general.npm:
    name: pm2
    global: yes
  become: yes

- name: Copy frontend build files
  ansible.posix.synchronize:
    src: "{{ playbook_dir }}/../../app/front-end/dist/"
    dest: /app/front-end/dist
    rsync_opts:
      - "--rsync-path='mkdir -p /app/front-end/dist && rsync'"
    delete: yes
  become: yes

# - name: Copy frontend files
#   ansible.posix.synchronize:
#     src: "{{ playbook_dir }}/../../app/front-end/"
#     dest: /app/front-end
#     rsync_opts:
#       - "--rsync-path='mkdir -p /app/front-end && rsync'"
#     delete: yes
#   become: yes

# - name: Install frontend dependencies
#   command:
#     cmd: npm install
#     chdir: /app/front-end

# - name: Build frontend
#   command:
#     cmd: npm run build
#     chdir: /app/front-end
#   become: yes

- name: Copy backend files
  ansible.posix.synchronize:
    src: "{{ playbook_dir }}/../../app/back-end/"
    dest: /app/back-end
    rsync_opts:
      - "--rsync-path='mkdir -p /app/back-end && rsync'"
    delete: yes
  become: yes

- name: Install backend dependencies
  npm:
    path: /app/back-end
    state: present
  become: yes

- name: Update backend environment variables
  template:
    src: ./templates/.env.j2
    dest: /app/back-end/.env
  become: yes

- name: Start or restart backend with PM2
  shell:
    cmd: pm2 restart backend || pm2 start index.js --name backend
    chdir: /app/back-end
  become: yes

# - name: Apply migrations
#   command:
#     cmd: npx sequelize-cli db:migrate --env production
#     chdir: /app/back-end
#   become: yes

# - name: Seed database
#   command:
#     cmd: npx sequelize-cli db:seed:all --env production
#     chdir: /app/back-end
#   become: yes

- name: Seed database
  command:
    cmd: node migrate.js
    chdir: /app/back-end